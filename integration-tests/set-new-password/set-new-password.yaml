- name: Reset password success
  steps:
  - type: http
    method: PATCH
    url: "{{.baseurl}}/users/{{.username1}}/reset-password"
    headers:
      Content-Type: application/json
    body: |
      {
        "token": "{{.resetToken}}",
        "newPassword": "{{.password2}}"
      }
    assertions:
    - result.statuscode ShouldEqual 204

- name: Reset password Bad Request
  steps:
  - type: http
    method: PATCH
    url: "{{.baseurl}}/users/{{.username1}}/reset-password"
    headers:
      Content-Type: application/json
    body: |
      {
        "newPassword": "{{.password2}}"
      }
    assertions:
    - result.statuscode ShouldEqual 400
    - result.body.error.title ShouldEqual "BadRequest"
    - result.body.error.code ShouldEqual "ERR-001"
    - result.body.error.message ShouldEqual "The request body is invalid. Please check the request body and try again."
    - result.body.error.http_status ShouldEqual 400

- name: Reset password Forbidden
  steps:
  - type: http
    method: PATCH
    url: "{{.baseurl}}/users/{{.username1}}/reset-password"
    headers:
      Content-Type: application/json
    body: |
      {
        "token": "000000",
        "newPassword": "{{.password2}}"
      }
    assertions:
    - result.statuscode ShouldEqual 403
    - result.body.error.title ShouldEqual "PasswordResetTokenInvalid"
    - result.body.error.code ShouldEqual "ERR-025"
    - result.body.error.message ShouldEqual "The password reset token is invalid or has expired. Please request a new token and try again."
    - result.body.error.http_status ShouldEqual 403

- name: Reset password User Not Found
  steps:
  - type: http
    method: PATCH
    url: "{{.baseurl}}/users/thisUserDoesntExist/reset-password"
    headers:
      Content-Type: application/json
    body: |
      {
        "token": "{{.resetToken}}",
        "newPassword": "{{.password2}}"
      }
    assertions:
    - result.statuscode ShouldEqual 404
    - result.body.error.title ShouldEqual "UserNotFound"
    - result.body.error.code ShouldEqual "ERR-004"
    - result.body.error.message ShouldEqual "The user was not found. Please check the username and try again."
    - result.body.error.http_status ShouldEqual 404