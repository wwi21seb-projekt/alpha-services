name: Continuous Integration
run-name: CI for ${{ github.event_name == 'pull_request' && format('PR-%d', github.event.number) || 'main' }}

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io

jobs:
  setup-matrix:
    name: Setup Matrix
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build matrix based on changed directories
        id: set-matrix
        uses: ./.github/actions/build-matrix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  verify:
    name: Verify (${{ matrix.service }}) for ${{ github.event_name == 'pull_request' && github.event.number || 'main' }}
    needs: setup-matrix
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix )}}
    permissions:
      contents: read
      packages: write # Grant write permissions to packages
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: src/${{ matrix.service }}/go.mod
          cache-dependency-path: src/${{ matrix.service }}/go.sum

      - name: Install Staticcheck
        run: |
          cd src/${{ matrix.service }}
          go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: Build project and verify dependencies
        run: |
          cd src/${{ matrix.service }}
          go build -v ./cmd/main.go && go mod verify

      - name: Verify Code Quality
        run: |
          cd src/${{ matrix.service }}
          go vet ./... && staticcheck ./...

      - name: Run Tests
        run: |
          cd src/${{ matrix.service }}
          go test -v ./...

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository}}/${{ matrix.service }}
          tags: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || 'latest' }}
          # ${{ github.event_name == 'pull_request' && format('pr-{0}-{1}', github.event.number, github.sha) || github.sha }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src/${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./src/${{ matrix.service }}/Dockerfile
